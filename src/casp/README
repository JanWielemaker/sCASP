c(ASP) Internal Documentation
+++++++++++++++++++++++++++++

Introduction
============

c(ASP) is the CIAO ported version of s(ASP), s(ASP) is an
implementation of the stable model semantics of logic
programming. Unlike similar systems, it does not employ any form of
grounding. This allows s(ASP) to execute programs that are not
finitely groundable, including those which make use of lists and
terms. Work on s(ASP) is supported by the National Science Foundation
under Grant No. 1423419 visit
https://sourceforge.net/projects/sasp-system/ for the s(ASP) source
code.

Installation of c(ASP) 
======================

To run c(ASP) you need CIAO Prolog working in your computer:
visit http://ciao-lang.org/ for the last CIAO stable version.

Then compile the c(ASP) source code using:

For Mac-OS / Linux
------------------

ciaoc -x -o casp main.pl

it generates an executable file named casp which you can place
wherever you want...

For Windows
-----------

ciaoc-1.14 -o casp main.pl

it generates an executable file named casp (it is recommended to
execute it from src\).


Usage of c(ASP)
===============

To obtain one model of the program (i.e. test.pl)
   $ ./casp test.pl
   Answer: 1
   { q(?Var6), not p(?Var6) }
   $

To obtain all the models (answers) of test.pl
   $ ./casp -s0 test.pl

To obtain 5 answers of test.pl
   $ ./casp -s5 test.pl

To print the "translation" of the code (with duals predicates and
check-rules)
   $ ./casp -d0 test.pl

To use casp with its iterative mode:
   $ ./casp -i test.pl
   ?- p(X).
   { p(?Var6), not q(?Var6) } ? 

   false.
   ?- q(X).
   { q(?Var6), not p(?Var6) } ? ;

   false.
   ?- halt.
   $

The example program test.pl is:
   p(X) :- not q(X).
   q(X) :- not p(X).

   ?- q(X).

Note that the program include the query in order to be use without
iterative mode...


Generation of the HTML justification tree
-----------------------------------------

To generate the html justification tree the execution should be made
from the src directory:
   $ ./casp -w test.pl
   Answer: 1
   { q(?Var6), not p(?Var6) }

   BEGIN HTML JUSTIFICATION
   END HTML JUSTIFICATION
   $

the justification tree is a file named justification.html place in the
sub-directory html/ where there are the css/ and js/ directories needed
by the justification.html file.

In order to generate the justification of each answers use the
iterative mode and refresh the justification.html file in the browser:
   $ ./casp -w -i test.pl
   ?- ...



Installation / Usage of the HTML local_interface
================================================

c(ASP) provide a tool called 'web_casp{sh,bat}' which run a html/php
local_interface allowing the execution of c(ASP) programs with user
queries and generate a file with the HTML justification tree.

For Mac-OS / Linux
------------------

Last versions of OSX and Linux include php. Therefore using the shell
script in src/:

     $ ./web_casp.sh

and php will create the localhost and the HTML local_interface will be
opened in the default browser (firefox for Linux).

For Windows
-----------

In Windows we have to install a mini web server. The sources of casp
has been tested using XAMPP (assuming it is installed in
C:\xampp). See <https://www.apachefriends.org/es/index.html> for
download and installation instructions. The next steps are:

First: The source code of c(ASP) has to be copied to
C:\xampp\htdocs\ciao-master\src.

Second: The compiled file of casp should be copied in
C:\xampp\htdocs\ciao-master\src\server\

Third: Run the application 'XAMPP Control Panel' and start the Apache
engine.

Finally: Execute the bat script in src\:

     $ web_casp.bat

and the HTML local_interface will be opened in the default browser.
